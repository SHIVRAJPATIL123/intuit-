# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CURD:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}
      - name: init terraform
        run: cd terraform && terraform init
      - name: plan cluster
        run: cd terraform && terraform plan -var "do_token=${{ secrets.DO_TOKEN }}"
      - name: create cluster
        run: cd terraform && terraform apply -auto-approve  -var "do_token=${{ secrets.DO_TOKEN }} "
      - name: auth cluster1
        run: doctl kubernetes cluster kubeconfig save first
      - name: test cluster1
        run: kubectl get all
      - name: deploy rediscluster in cluster 1
        run: cd terraform/helm/redis-cluster1/ && terraform init && terraform apply -auto-approve
      - name: auth cluster2
        run: doctl kubernetes cluster kubeconfig save second
      - name: test cluster2
        run: kubectl get all
      - name: deploy rediscluster in cluster 2
        run: cd terraform/helm/redis-cluster2/ && terraform init && terraform apply -auto-approve
      # - name: destroy cluster
      #   run: cd terraform && terraform destroy -auto-approve -var "do_token=${{ secrets.DO_TOKEN }} " 


      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
